/*
 * webserver
 *
 * rest api
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package webserver

type Config struct {

	// defines what kind of spec is
	Type string `json:"type"`

	Spec string `json:"spec"`
}

// AssertConfigRequired checks if the required fields are not zero-ed
func AssertConfigRequired(obj Config) error {
	elements := map[string]interface{}{
		"type": obj.Type,
		"spec": obj.Spec,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseConfigRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Config (e.g. [][]Config), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConfigRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConfig, ok := obj.(Config)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConfigRequired(aConfig)
	})
}
