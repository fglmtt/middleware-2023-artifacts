/*
 * webserver
 *
 * rest api
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package webserver

type App struct {

	// identifier
	Id int32 `json:"id,omitempty"`

	PhysicalTwins []PhysicalTwin `json:"physicalTwins"`

	DigitalTwins []DigitalTwin `json:"digitalTwins"`
}

// AssertAppRequired checks if the required fields are not zero-ed
func AssertAppRequired(obj App) error {
	elements := map[string]interface{}{
		"physicalTwins": obj.PhysicalTwins,
		"digitalTwins":  obj.DigitalTwins,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.PhysicalTwins {
		if err := AssertPhysicalTwinRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DigitalTwins {
		if err := AssertDigitalTwinRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseAppRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of App (e.g. [][]App), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAppRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aApp, ok := obj.(App)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAppRequired(aApp)
	})
}
